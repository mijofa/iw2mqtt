#!/bin/ash

. libiw2mqtt

# Moved below because older versions of ash don't support 'exec 3> ...'
#
# Set up state_topic and mqtt's "last will and testament".
# This way when the script exits uncleanly it tells HA that the entities are unavailable,
# rather than letting it continue to trust the outdated info.
# # FIXME: Why OpenWRT doesn't have '/dev/fd' by default? OpenWRT's ash requires it for this?
# test -L /dev/fd || ln -s /proc/self/fd /dev/fd
# exec 3> >(exec mosquitto_pub --username $MQTT_USER --pw $MQTT_PASS --host $MQTT_HOST --will-topic "$AVAIL_TOPIC" --will-payload "false" --will-retain --topic "$STATE_TOPIC" --stdin-line)

# Pre-load the currently connected devices before we start listening for new devices
list_connected_MACs | while read mac ; do
    configure_discovery_for_mac "$mac"
done
update_all_connections

# Set up MQTT's "last will and testament" so that things go automatically unavailable when we die.
# NOTE: Using '--topic' & '--filter-out' because mosquitto_sub doesn't work without specifying a topic,
#       but since I don't actually care to ready that topic I filter it out to avoid printing anything.
mosquitto_sub --username $MQTT_USER --pw $MQTT_PASS --host $MQTT_HOST \
    --topic "$AVAIL_TOPIC" --filter-out "$AVAIL_TOPIC" \
    --will-topic "$AVAIL_TOPIC" --will-payload "false" --will-retain  &
trap "kill -9 $!" EXIT

{
    # FIXME: The only reason for this interval is so that we can update disconnects only a minute later.
    #        Should we just run the 'update_all_connections' function in it's own background loop?
    while sleep $UPDATE_INTERVAL ; do
        printf '[%s]: n/a: ping station ALL\n' "$(date +'%Y-%m-%d %T.000000')"
    done &

    iw event -T
} | while read date time nic event station mac ; do
    # Ignore the "unknown event" lines we get from `iw event`
    [[ "$station" == "station" ]] || continue

    # Ignore disconnect events, because it might be a transient outage, so just let them expire out instead
    [[ "$event" == "del" ]] && continue

    # Update active connections with new connections and every interval
    [[ "$event" == "ping" ]] && update_all_connections

    # Update new connections immediately instead of waiting for the ping
    [[ "$event" == "new" ]] && new_connection "$mac"
done

# We still want to tell HA we're offline when we exit cleanly
mosquitto_pub --username $MQTT_USER --pw $MQTT_PASS --host $MQTT_HOST --topic "$AVAIL_TOPIC" --message "false" --retain
